services:
  e2e:
    build:
      dockerfile: ./Dockerfile
    volumes:
      - ./specs:/usr/src/app/specs
    depends_on:
      - reservations
      - auth
      - payments
      - notifications
      - mongo

  reservations:
    build:
      context: ..
      dockerfile: ./apps/reservations/Dockerfile
      target: development
    command: pnpm run start:dev reservations
    env_file: ./apps/reservations/.env
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
    depends_on:
      - mongo

  auth:
    build:
      context: ..
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: pnpm run start:dev auth
    env_file: ./apps/auth/.env
    ports:
      - '3001:3001'
    volumes:
      - .:/usr/src/app
    depends_on:
      - mongo

  payments:
    build:
      context: ..
      dockerfile: ./apps/payments/Dockerfile
      target: development
    command: pnpm run start:dev payments
    env_file: ./apps/payments/.env
    ports:
      - '3003:3003'
    volumes:
      - .:/usr/src/app
    depends_on:
      - mongo

  notifications:
    build:
      context: ..
      dockerfile: ./apps/notifications/Dockerfile
      target: development
    command: pnpm run start:dev notifications
    env_file: ./apps/notifications/.env
    volumes:
      - .:/usr/src/app
    depends_on:
      - mongo

  mongo:
    image: mongo:latest
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: dev
      MONGO_INITDB_ROOT_PASSWORD: 123
      MONGO_INITDB_DATABASE: sleepr
    ports:
      - 27017:27017
    volumes:
      - db:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5

volumes:
  db:
